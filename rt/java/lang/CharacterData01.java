/*     */ package java.lang;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ class CharacterData01
/*     */   extends CharacterData
/*     */ {
/*     */   int getProperties(int paramInt) {
/*  71 */     char c = (char)paramInt;
/*  72 */     return A[Y[X[c >> 5] << 4 | c >> 1 & 0xF] << 1 | c & 0x1];
/*     */   }
/*     */ 
/*     */   
/*     */   int getPropertiesEx(int paramInt) {
/*  77 */     char c = (char)paramInt;
/*  78 */     return B[Y[X[c >> 5] << 4 | c >> 1 & 0xF] << 1 | c & 0x1];
/*     */   }
/*     */ 
/*     */   
/*     */   int getType(int paramInt) {
/*  83 */     int i = getProperties(paramInt);
/*  84 */     return i & 0x1F;
/*     */   }
/*     */   
/*     */   boolean isOtherLowercase(int paramInt) {
/*  88 */     int i = getPropertiesEx(paramInt);
/*  89 */     return ((i & 0x1) != 0);
/*     */   }
/*     */   
/*     */   boolean isOtherUppercase(int paramInt) {
/*  93 */     int i = getPropertiesEx(paramInt);
/*  94 */     return ((i & 0x2) != 0);
/*     */   }
/*     */   
/*     */   boolean isOtherAlphabetic(int paramInt) {
/*  98 */     int i = getPropertiesEx(paramInt);
/*  99 */     return ((i & 0x4) != 0);
/*     */   }
/*     */   
/*     */   boolean isIdeographic(int paramInt) {
/* 103 */     int i = getPropertiesEx(paramInt);
/* 104 */     return ((i & 0x10) != 0);
/*     */   }
/*     */   
/*     */   boolean isJavaIdentifierStart(int paramInt) {
/* 108 */     int i = getProperties(paramInt);
/* 109 */     return ((i & 0x7000) >= 20480);
/*     */   }
/*     */   
/*     */   boolean isJavaIdentifierPart(int paramInt) {
/* 113 */     int i = getProperties(paramInt);
/* 114 */     return ((i & 0x3000) != 0);
/*     */   }
/*     */   
/*     */   boolean isUnicodeIdentifierStart(int paramInt) {
/* 118 */     int i = getProperties(paramInt);
/* 119 */     return ((i & 0x7000) == 28672);
/*     */   }
/*     */   
/*     */   boolean isUnicodeIdentifierPart(int paramInt) {
/* 123 */     int i = getProperties(paramInt);
/* 124 */     return ((i & 0x1000) != 0);
/*     */   }
/*     */   
/*     */   boolean isIdentifierIgnorable(int paramInt) {
/* 128 */     int i = getProperties(paramInt);
/* 129 */     return ((i & 0x7000) == 4096);
/*     */   }
/*     */   
/*     */   int toLowerCase(int paramInt) {
/* 133 */     int i = paramInt;
/* 134 */     int j = getProperties(paramInt);
/*     */     
/* 136 */     if ((j & 0x20000) != 0) {
/* 137 */       int k = j << 5 >> 23;
/* 138 */       i = paramInt + k;
/*     */     } 
/* 140 */     return i;
/*     */   }
/*     */   
/*     */   int toUpperCase(int paramInt) {
/* 144 */     int i = paramInt;
/* 145 */     int j = getProperties(paramInt);
/*     */     
/* 147 */     if ((j & 0x10000) != 0) {
/* 148 */       int k = j << 5 >> 23;
/* 149 */       i = paramInt - k;
/*     */     } 
/* 151 */     return i;
/*     */   }
/*     */   
/*     */   int toTitleCase(int paramInt) {
/* 155 */     int i = paramInt;
/* 156 */     int j = getProperties(paramInt);
/*     */     
/* 158 */     if ((j & 0x8000) != 0) {
/*     */       
/* 160 */       if ((j & 0x10000) == 0)
/*     */       {
/*     */         
/* 163 */         i = paramInt + 1;
/*     */       }
/* 165 */       else if ((j & 0x20000) == 0)
/*     */       {
/*     */         
/* 168 */         i = paramInt - 1;
/*     */ 
/*     */       
/*     */       }
/*     */ 
/*     */ 
/*     */     
/*     */     }
/* 176 */     else if ((j & 0x10000) != 0) {
/*     */ 
/*     */       
/* 179 */       i = toUpperCase(paramInt);
/*     */     } 
/* 181 */     return i;
/*     */   }
/*     */   
/*     */   int digit(int paramInt1, int paramInt2) {
/* 185 */     int i = -1;
/* 186 */     if (paramInt2 >= 2 && paramInt2 <= 36) {
/* 187 */       int j = getProperties(paramInt1);
/* 188 */       int k = j & 0x1F;
/* 189 */       if (k == 9) {
/* 190 */         i = paramInt1 + ((j & 0x3E0) >> 5) & 0x1F;
/*     */       }
/* 192 */       else if ((j & 0xC00) == 3072) {
/*     */         
/* 194 */         i = (paramInt1 + ((j & 0x3E0) >> 5) & 0x1F) + 10;
/*     */       } 
/*     */     } 
/* 197 */     return (i < paramInt2) ? i : -1;
/*     */   }
/*     */   
/*     */   int getNumericValue(int paramInt) {
/* 201 */     int i = getProperties(paramInt);
/* 202 */     int j = -1;
/*     */     
/* 204 */     switch (i & 0xC00)
/*     */     
/*     */     { default:
/* 207 */         j = -1;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */         
/* 331 */         return j;case 1024: j = paramInt + ((i & 0x3E0) >> 5) & 0x1F; return j;case 2048: switch (paramInt) { case 65811: j = 40; return j;case 65812: j = 50; return j;case 65813: j = 60; return j;case 65814: j = 70; return j;case 65815: j = 80; return j;case 65816: j = 90; return j;case 65817: j = 100; return j;case 65818: j = 200; return j;case 65819: j = 300; return j;case 65820: j = 400; return j;case 65821: j = 500; return j;case 65822: j = 600; return j;case 65823: j = 700; return j;case 65824: j = 800; return j;case 65825: j = 900; return j;case 65826: j = 1000; return j;case 65827: j = 2000; return j;case 65828: j = 3000; return j;case 65829: j = 4000; return j;case 65830: j = 5000; return j;case 65831: j = 6000; return j;case 65832: j = 7000; return j;case 65833: j = 8000; return j;case 65834: j = 9000; return j;case 65835: j = 10000; return j;case 65836: j = 20000; return j;case 65837: j = 30000; return j;case 65838: j = 40000; return j;case 65839: j = 50000; return j;case 65840: j = 60000; return j;case 65841: j = 70000; return j;case 65842: j = 80000; return j;case 65843: j = 90000; return j;case 66339: j = 50; return j;case 65860: j = 50; return j;case 65861: j = 500; return j;case 65862: j = 5000; return j;case 65863: j = 50000; return j;case 65866: j = 50; return j;case 65867: j = 100; return j;case 65868: j = 500; return j;case 65869: j = 1000; return j;case 65870: j = 5000; return j;case 65873: j = 50; return j;case 65874: j = 100; return j;case 65875: j = 500; return j;case 65876: j = 1000; return j;case 65877: j = 10000; return j;case 65878: j = 50000; return j;case 65894: j = 50; return j;case 65895: j = 50; return j;case 65896: j = 50; return j;case 65897: j = 50; return j;case 65898: j = 100; return j;case 65899: j = 300; return j;case 65900: j = 500; return j;case 65901: j = 500; return j;case 65902: j = 500; return j;case 65903: j = 500; return j;case 65904: j = 500; return j;case 65905: j = 1000; return j;case 65906: j = 5000; return j;case 65908: j = 50; return j;case 66369: j = 90; return j;case 66378: j = 900; return j;case 66517: j = 100; return j;case 67677: j = 100; return j;case 67678: j = 1000; return j;case 67679: j = 10000; return j;case 67865: j = 100; return j;case 68166: j = 100; return j;case 68167: j = 1000; return j;case 68222: j = 50; return j;case 68446: j = 100; return j;case 68447: j = 1000; return j;case 68478: j = 100; return j;case 68479: j = 1000; return j;case 69228: j = 40; return j;case 69229: j = 50; return j;case 69230: j = 60; return j;case 69231: j = 70; return j;case 69232: j = 80; return j;case 69233: j = 90; return j;case 69234: j = 100; return j;case 69235: j = 200; return j;case 69236: j = 300; return j;case 69237: j = 400; return j;case 69238: j = 500; return j;case 69239: j = 600; return j;case 69240: j = 700; return j;case 69241: j = 800; return j;case 69242: j = 900; return j;case 69726: j = 40; return j;case 69727: j = 50; return j;case 69728: j = 60; return j;case 69729: j = 70; return j;case 69730: j = 80; return j;case 69731: j = 90; return j;case 69732: j = 100; return j;case 69733: j = 1000; return j;case 74802: j = 216000; return j;case 74803: j = 432000; return j;case 119660: j = 40; return j;case 119661: j = 50; return j;case 119662: j = 60; return j;case 119663: j = 70; return j;case 119664: j = 80; return j;case 119665: j = 90; return j; }  j = -2; return j;case 3072: break; }  j = (paramInt + ((i & 0x3E0) >> 5) & 0x1F) + 10; return j;
/*     */   }
/*     */   
/*     */   boolean isWhitespace(int paramInt) {
/* 335 */     int i = getProperties(paramInt);
/* 336 */     return ((i & 0x7000) == 16384);
/*     */   }
/*     */   
/*     */   byte getDirectionality(int paramInt) {
/* 340 */     int i = getProperties(paramInt);
/* 341 */     byte b = (byte)((i & 0x78000000) >> 27);
/* 342 */     if (b == 15) {
/* 343 */       b = -1;
/*     */     }
/* 345 */     return b;
/*     */   }
/*     */   
/*     */   boolean isMirrored(int paramInt) {
/* 349 */     int i = getProperties(paramInt);
/* 350 */     return ((i & Integer.MIN_VALUE) != 0);
/*     */   }
/*     */   
/* 353 */   static final CharacterData instance = new CharacterData01();
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/* 360 */   static final char[] X = "\000\001\002\003\004\004\004\005\006\007\b\t\n\003\013\f\003\003\003\003\r`abcdefghijklmn\003o\003\003\003\003\003\003\003\003IpIIqrs\003tuBvw\003\003xywz\003\003\003\003\003I{I|qI}~IIIIII\003\003\003II\003II\003IIIq\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003"
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 468 */     .toCharArray();
/*     */ 
/*     */ 
/*     */   
/* 472 */   static final char[] Y = "\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\002\000\001\000\000\000\000\000\000\000\003\000\000\000\000\000\000\000\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\003\003\004\005\003\006\007\007\007\007\b\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\003\013\f\f\f\f\r\016\r\r\017\r\r\020\021\r\r\022\023\024\025\026\027\030\031\r\r\r\r\r\r\032\033\034\035\036\036\036\036\036\036\036\036\037\003\003\036\036\036\036\036\036\003\003\003\003\003\003\003\003\003\003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f \003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\003\000\000\000\000\000\000\000\000\002\003\003\003\003\003\003\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002!\"\003\003\003\003\003\003\000\000\000\000\000\000\000\000#\000\000\000\000$\003\003\003\003\003\003\003\003\003\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\000\000\003\003\000\000\000\000&'(\003\003\003\003\003))))))))))))))))))))********************\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003+++++\003\003\003\003\003\003\003\003\003\003\003,,,\003-,,,,,,,,,,,,,,,,,,,,,,.-\003-.,,,,,,,,,,,/0123,,,,,,,,,,,456\0037,,,,,,,,,,,,,\003\003/,,,,,,,,,,,,,,,,,,,,,,,,,,,,\003\003\003,89:;\003\00399,,.,.,,,,,,,,,,,,,\003\003<=\003>??@3\003\003\003\003AAAAB\003\003\003,,,,,,,,,,,,,,CD,,,,,,,,,,,\0037EEE,,,,,,,,,,,\00300F3,,,,,,,,,-\003\00300F3,,,,-\003\003\003\003\003\003\003\003\003\003\003GGGGGHIIIIIIIIIJKL\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009999999MNNN\003\003OOOOOP\034\034\034\034QQQQQ\003\003\003\003\003\003\003\003<L\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000RK9STMUNN\003\003\003\003\003\003\003\000\000\000\000\000\000\000\000\000\000\000\000\002\003\003\003VVVVV\003\003\0039W\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000X99K99Y=ZZZZZNN\003\003\003\003\003\003\003\003\003\003\003\003\003\0039L\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000[R9999S\\\000]N\005\003\003\003VVVVV\003\003\003\000\000\000\000\000XKR999^\003\003\003\003\000\000\000\000\000\000\000\002\003\003\003\003\003\003\003\003____```abbcddddeefghhhbijklmdnopqrstuvvwxyzk{kkkk$\003\003\003\003\003\003NN\003\003\003\003\003\003\000\000\000\000\000\000\000\000\000\000\000\000\002\003\003\003\000\000\002\003\003\003\003\003[RRRRRRRRRRRRRRRRRRRRRR|\003\003\003\003\003\003\003><}~~~~~~\000\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\003\003\003\003\003\f\f\f\013\f\f\f\f\f\f\f\f\f\f\f\f\f^<\f<<< <<<\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f<<\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036<\003\003\003\003\003\003\003\003\003\003\003\003\003\036\036\036\036\036\036\036\036\036\036\036\003\003\003\003\n\n\n\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\036\036\036\036\036\036\003\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\003\003\003\003\003\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\003\003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\036\003\003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\003\003\003\003\003\f\f\f\f\f\f\f\f\f\f\f\f\f\f\003\003\003\003\003\003\f\f\f\f\f\f\f\f\f\f\f\f\003\003\003\f\003\003\003\003\003\003\003\003\003\003\003\003\003\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\003\036\036\036\036\003\003\003\003\003\003\003\003\003\003\036\036\036\036\036\036\036\036\003\003\003\003\003\003\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\003\036\036\036\036\036\036\036\036\036\036\036\036\036\036\036\003\036\036\003\003\003\003\003\003\036\036\036\036\036\036\036\036\036\036\036\036\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\003\036\036\003\036\036\036\036\036\003\003\003\003\003\003\003\003\036\036\036\003\003\003\003\003\003\003\003\003\003\003\003\003"
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 587 */     .toCharArray();
/*     */ 
/*     */ 
/*     */   
/* 591 */   static final int[] A = new int[320];
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   static final String A_DATA = "\000瀅\000瀅砀\000\000瀅\000瀅砀\000砀\000砀\000\000\030栀\030\000\030砀\000砀\000\000݋\000݋\000݋\000݋\000ѫ\000֋\000ࠋ\000ࠋ\000ࠋ砀\000\000\034\000\034\000\034栀砊栀砊栀矪栀瑊栀瞪栀琪栀砊栀益栀睊栀砊栀砊栀癪栀甪栀甊栀瓪栀瓪栀瓊栀璪栀璊栀瓊栀畊栀甪栀甊栀瓪栀瓊栀眪栀砊栀癊栀砊栀ࠋ栀ࠋ栀ࠋ栀ࠋ栀\034栀\034栀\034栀ۋ砀\000\000\034䀀〆\000Ы\000ҋ\000ԋ\000ࠋ\000瀅\000砊\000砊砀\000砀\000\000\030\000\030\000瘊\000瘊\000盪\000琊\000砊¢瀁¢瀁¡瀂¡瀂\000㐉\000㐉ࠀ瀅ࠀ瀅ࠀ瀅砀\000砀\000ࠀ瀅砀\000ࠀ\030ࠀԫࠀԫࠀԫࠀ׫ࠀ܋ࠀࠋࠀࠋࠀࠋࠀիࠀ٫ࠀދࠀࠋࠀԋࠀԋ砀\000栀\030ࠀ瀅䀀〆䀀〆䀀〆砀\000䀀〆䀀〆砀\000䀀〆䀀〆䀀〆砀\000砀\000䀀〆ࠀЫࠀЫࠀӋࠀ׫ࠀ\030ࠀ\030ࠀ\030砀\000ࠀ瀅ࠀҋࠀࠋࠀ\030栀\030栀\030ࠀ׋ࠀ۫　Ы　Ы　Ջ　٫　ࠋ　ࠋ　ࠋ砀\000\000〈䀀〆\000〈\000瀅䀀〆\000\030\000\030\000\030栀׫栀׫栀܋栀Ы\000㝉\000㝉\000〈\000〈䀀〆\000〈\000〈䀀〆\000\030\000တ\000㘉\000㘉䀀〆\000瀅\000瀅䀀〆䀀〆䀀〆\000㕉\000㕉\000瀅\000〈\000〈\000瀅\000瀅\000\030\000〈䀀〆\000瑊\000瑊\000睪\000睪\000睪\000皪\000皪\000皪\000皪\000疊\000疊\000疊\000瑪\000瑪\000瑪\000矪\000矪\000矊\000矊\000矊\000皪\000皊\000皊\000皊\000砊\000砊\000疪\000疪\000疪\000疊\000甪\000甊\000甊\000瓪\000瓊\000璪\000瓊\000瓊\000璪\000璊\000璊\000瑪\000瑪\000瑊\000琪\000琊\000眊\000眊\000眊\000癊\000癊\000癊\000癊\000瘪\000瘪\000瘊\000甪\000甪\000〈砀\000䀀〆\000瀄\000瀄\000瀄\000\034砀\000\000\034\000〈\000〈\000〈\000〈䠀တ䠀တ䠀တ䠀တ䀀〆䀀〆\000\034䀀〆栀\034栀\034砀\000\000Ы\000Ы\000Ջ\000٫\000瀁\000瀁\000瀂\000瀂\000瀂砀\000\000瀁砀\000砀\000\000瀁砀\000\000瀂\000瀁\000\031\000瀂\031\000瀁\000瀂᠀㙉᠀㙉᠀㔉᠀㔉᠀㟉᠀㟉᠀㚉᠀㚉᠀㕉᠀㕉က瀅က瀅砀\000က瀅က瀅砀\000栀\031栀\031砀\000栀\034᠀Ћ᠀߫᠀߫᠀߫᠀߫砀\000";
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/* 641 */   static final char
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 658 */     .toCharArray();
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   static {
/* 664 */     char[] arrayOfChar = "\000瀅\000瀅砀\000\000瀅\000瀅砀\000砀\000砀\000\000\030栀\030\000\030砀\000砀\000\000݋\000݋\000݋\000݋\000ѫ\000֋\000ࠋ\000ࠋ\000ࠋ砀\000\000\034\000\034\000\034栀砊栀砊栀矪栀瑊栀瞪栀琪栀砊栀益栀睊栀砊栀砊栀癪栀甪栀甊栀瓪栀瓪栀瓊栀璪栀璊栀瓊栀畊栀甪栀甊栀瓪栀瓊栀眪栀砊栀癊栀砊栀ࠋ栀ࠋ栀ࠋ栀ࠋ栀\034栀\034栀\034栀ۋ砀\000\000\034䀀〆\000Ы\000ҋ\000ԋ\000ࠋ\000瀅\000砊\000砊砀\000砀\000\000\030\000\030\000瘊\000瘊\000盪\000琊\000砊¢瀁¢瀁¡瀂¡瀂\000㐉\000㐉ࠀ瀅ࠀ瀅ࠀ瀅砀\000砀\000ࠀ瀅砀\000ࠀ\030ࠀԫࠀԫࠀԫࠀ׫ࠀ܋ࠀࠋࠀࠋࠀࠋࠀիࠀ٫ࠀދࠀࠋࠀԋࠀԋ砀\000栀\030ࠀ瀅䀀〆䀀〆䀀〆砀\000䀀〆䀀〆砀\000䀀〆䀀〆䀀〆砀\000砀\000䀀〆ࠀЫࠀЫࠀӋࠀ׫ࠀ\030ࠀ\030ࠀ\030砀\000ࠀ瀅ࠀҋࠀࠋࠀ\030栀\030栀\030ࠀ׋ࠀ۫　Ы　Ы　Ջ　٫　ࠋ　ࠋ　ࠋ砀\000\000〈䀀〆\000〈\000瀅䀀〆\000\030\000\030\000\030栀׫栀׫栀܋栀Ы\000㝉\000㝉\000〈\000〈䀀〆\000〈\000〈䀀〆\000\030\000တ\000㘉\000㘉䀀〆\000瀅\000瀅䀀〆䀀〆䀀〆\000㕉\000㕉\000瀅\000〈\000〈\000瀅\000瀅\000\030\000〈䀀〆\000瑊\000瑊\000睪\000睪\000睪\000皪\000皪\000皪\000皪\000疊\000疊\000疊\000瑪\000瑪\000瑪\000矪\000矪\000矊\000矊\000矊\000皪\000皊\000皊\000皊\000砊\000砊\000疪\000疪\000疪\000疊\000甪\000甊\000甊\000瓪\000瓊\000璪\000瓊\000瓊\000璪\000璊\000璊\000瑪\000瑪\000瑊\000琪\000琊\000眊\000眊\000眊\000癊\000癊\000癊\000癊\000瘪\000瘪\000瘊\000甪\000甪\000〈砀\000䀀〆\000瀄\000瀄\000瀄\000\034砀\000\000\034\000〈\000〈\000〈\000〈䠀တ䠀တ䠀တ䠀တ䀀〆䀀〆\000\034䀀〆栀\034栀\034砀\000\000Ы\000Ы\000Ջ\000٫\000瀁\000瀁\000瀂\000瀂\000瀂砀\000\000瀁砀\000砀\000\000瀁砀\000\000瀂\000瀁\000\031\000瀂\031\000瀁\000瀂᠀㙉᠀㙉᠀㔉᠀㔉᠀㟉᠀㟉᠀㚉᠀㚉᠀㕉᠀㕉က瀅က瀅砀\000က瀅က瀅砀\000栀\031栀\031砀\000栀\034᠀Ћ᠀߫᠀߫᠀߫᠀߫砀\000".toCharArray();
/* 665 */     assert arrayOfChar.length == 640;
/* 666 */     byte b1 = 0, b2 = 0;
/* 667 */     while (b1 < 'ʀ') {
/* 668 */       int i = arrayOfChar[b1++] << 16;
/* 669 */       A[b2++] = i | arrayOfChar[b1++];
/*     */     } 
/*     */   }
/*     */ }


/* Location:              D:\tools\env\Java\jdk1.8.0_211\rt.jar!\java\lang\CharacterData01.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */